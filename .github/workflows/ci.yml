name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run unit tests
      run: ./mvnw clean test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydatabase
        SPRING_DATASOURCE_USERNAME: myuser
        SPRING_DATASOURCE_PASSWORD: secret

    - name: Run integration tests
      run: ./mvnw verify -P integration-test
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydatabase
        SPRING_DATASOURCE_USERNAME: myuser
        SPRING_DATASOURCE_PASSWORD: secret

    - name: Generate test report
      uses: dorny/test-reporter@v1
      if: success() || failure()
      with:
        name: Maven Tests
        path: target/surefire-reports/*.xml
        reporter: java-junit

  e2e-tests:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: mydatabase
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Cypress dependencies
      run: npm install

    - name: Build application
      run: ./mvnw clean package -DskipTests
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydatabase
        SPRING_DATASOURCE_USERNAME: myuser
        SPRING_DATASOURCE_PASSWORD: secret

    - name: Start application
      run: |
        java -jar target/map_of_france-0.0.1-SNAPSHOT.jar &
        sleep 30
      env:
        SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/mydatabase
        SPRING_DATASOURCE_USERNAME: myuser
        SPRING_DATASOURCE_PASSWORD: secret

    - name: Run Cypress tests
      run: npm run cypress:run
      env:
        CYPRESS_baseUrl: http://localhost:8080

    - name: Upload Cypress screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: cypress-screenshots
        path: cypress/screenshots

    - name: Upload Cypress videos
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: cypress-videos
        path: cypress/videos

  build:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build Docker image
      run: docker build -t map-of-france:${{ github.sha }} .

    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:8080 || exit 1
        docker-compose down

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: jar-file
        path: target/*.jar
